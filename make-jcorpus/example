#!/bin/bash


# exit if anything gets a non-zero status
set -e

# error if expanding an unset variable
# set -u
## NOTE: we can no longer do the 'set -u' since we need to test the definedness
## of XTREEMFS_REPLACEMENT without triggering an error.
## However, once all the likely bash versions are 4.2 or greater,
## we can reinstate the 'set -u' and change the test on the
## environment variable to [[ -v XTREEMFS_REPLACEMENT ]].

# current script dir  (currently "$MUSE"/tools/make-jcorpus )
X_SCRIPTDIR="$( cd "$( dirname "${BASH_SOURCE[0]}" )" && pwd )"

JROOT="$1"; shift

# If there are no source locations as arguments, it will read them from stdin.
# In the code, $CURR_ARG is the current argument, whether it came
# from the command line or from the standard input.
if [ $# -eq 0 ]
then
  STDIN_ARGS=true
else
  STDIN_ARGS=false
fi


if [[ -e "$JROOT" ]]
then
  # if it exists, it must be a directory that is writable and empty
  if [[ -d "$JROOT" && -w "$JROOT" && -n `find "$JROOT" -maxdepth 0 -empty` ]]
  then
    : # OK
  else
    echo 'Error: JROOT, if it exists, must be an empty, writable directory: ' "$JROOT"
    exit 2
  fi
else
  mkdir "$JROOT" || exit 2
fi



FIRSTARGPAT='^(.*/[^/]*xtreemfs[^/]*)/'

# this next phrase is repeated in the main loop,
# but since it refers to the main shell script $1,
# I can't put it in a function.
if [ "$STDIN_ARGS" = true ]
then
  # Because of set -e, if this gets EOF the script will just exit.
  # But we will make an exit alternative just for safety.
  read CURR_ARG || exit 2
else
  CURR_ARG=$1; shift
fi
# If XTREEMFS_REPLACEMENT is specified, it must be a prefix of the first arg
if [ -z "$XTREEMFS_REPLACEMENT" ]
then
  # The first arg determines the xtreemfs directory.
  if [[ "$CURR_ARG" =~ $FIRSTARGPAT ]]
  then
    XROOT="${BASH_REMATCH[1]}"
  else
    echo 'ERROR: path given does not have an xtreemfs directory: ' "$CURR_ARG"
    echo '       You may wish to specify a replacement by setting XTREEMFS_REPLACEMENT.'
    exit 2
  fi
else
  if [[ "$CURR_ARG" = "$XTREEMFS_REPLACEMENT"* ]]
  then
    XROOT="$XTREEMFS_REPLACEMENT"
  else
    echo 'ERROR: Environment variable XTREEMFS_REPLACEMENT does not match'
    echo '       first path given: ' "$CURR_ARG"
    exit 2
  fi
fi


echo '$XTREEMFS_REPLACEMENT' = "$XTREEMFS_REPLACEMENT"
echo '$CURR_ARG' = "$CURR_ARG"
echo '$FIRSTARGPAT' = "$FIRSTARGPAT"
echo '$XROOT' = "$XROOT"
